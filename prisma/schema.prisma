// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  username String @unique
  password String
  createdAt DateTime @default(now())
  
  // Message relations
  sentMessages Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
  
  // Room relations
  rooms ChatRoom[] @relation("RoomUsers")
}

model Message {
  id String @id @default(uuid())
  content String
  timestamp DateTime @default(now())
  senderId String
  sender User @relation("SentMessages", fields: [senderId], references: [id])

  // For direct messages
  receiverId String?
  receiver User? @relation("ReceivedMessages", fields: [receiverId], references: [id])

  // For room messages
  roomId String?
  room ChatRoom? @relation(fields: [roomId], references: [id])
}

model ChatRoom  {
  id String @id @default(uuid())
  name String
  isGroup Boolean @default(false)
  users User[] @relation("RoomUsers")

  messages Message[]
}